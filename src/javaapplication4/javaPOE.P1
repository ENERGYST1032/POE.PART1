package javaapplication4;

import javax.swing.JOptionPane;
import java.util.regex.Pattern;

public class JavaApplication4 {

    public static void main(String[] args) {
        
        Registration registration = new Registration();

        // Prompt user to enter registration details
        String firstname = JOptionPane.showInputDialog("Enter your firstname");
        String lastname = JOptionPane.showInputDialog("Enter your lastname");
        String username = JOptionPane.showInputDialog("Enter your username:");
       String password = "";
       
      
     /* if(isValidUsername(username)){
              JOptionPane.showMessageDialog(null,"Username successfully captured!");
      } else {
              JOptionPane.showMessageDialog(null, "Username is not correctly formatted, please ensure that your username contains an underscore and is no more than 5 characters." +username );
      }
     */
        do { 
            username = JOptionPane.showInputDialog(null, "enter a valid username"); 
        } while (!isValidUsername(username));{
               JOptionPane.showMessageDialog(null,"Username successfully captured.");
    }

        do {
            password = JOptionPane.showInputDialog(null, "Please enter a password that meets the following requirements:\n- At least 8 characters long\n- Contain a capital letter\n- Contain a number\n- Contain a special character");
        } while (!isValidPassword(password));{
        JOptionPane.showMessageDialog(null,"Password successfully captured.");
    }
    

       
    }
    
     
    

    public static boolean isValidPassword(String password) {
        // Check password length
        if (password == null || password.length() < 8) {
            JOptionPane.showMessageDialog(null, "Password too short!");
            return false;
        }

        // Check for capital letters, numbers, and special characters using regex
        boolean hasCapital = Pattern.compile("[A-Z]").matcher(password).find();
        boolean hasNumber = Pattern.compile("[0-9]").matcher(password).find();
        boolean hasSpecialChar = Pattern.compile("[^a-zA-Z0-9]").matcher(password).find();

        if (!hasCapital) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one capital letter!");
            return false;
        }

        if (!hasNumber) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one number!");
            return false;
        }

        if (!hasSpecialChar) {
            JOptionPane.showMessageDialog(null, "Password must contain at least one special character!");
            return false;
        }

        // Password is valid
        return true;
    

       
    }
    public static boolean isValidUsername(String username) {
    if (!username.contains("_")) {
        // If username does not contain an underscore
        return false;
    } else if (username.length() >= 5) {
        // If username is longer than 5 characters
        return false;
    } else {
        // If username contains an underscore and has no more than 5 characters
        return true;
    }
}
 

    }

          

            
    
